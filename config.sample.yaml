# The homeserver configuration for the bot. This is where the bot will connect to.
homeserver:
  # The URL to the client/server API. This is usually the same as specified in Riot/your client
  url: "https://t2bot.io"

  # An access token to an existing account for the bot. The display name will get overwritten.
  accessToken: "Your_token_here"

# The settings to control what and how the bot monitors
monitor:
  # The rooms to automatically try and join on startup. Each item in the list is a list of room
  # aliases to try to ensure the bot gets into the room. This can allow, for example, the bot
  # to join the room through the matrix.org alias if t2bot.io is down for some reason.
  rooms:
    - ["#monitor-public:t2bot.io", "#monitor-public:matrix.org"]

  # If enabled, the bot will auto-accept invites to allow other people to measure latency with
  # your server. If this is disabled (default), only the rooms listed in `rooms` above will
  # be allowed to use the bot.
  allowOtherRooms: false

# The Prometheus metrics configuration
metrics:
  # If enabled, Prometheus metrics will be served from /_monitorbot/metrics on the webserver.
  enabled: false

  # The host to bind on. It is generally recommended to keep this protected from the world.
  bind: '127.0.0.1'

  # The port to bind metrics on. If this is the same as the webserver port then the bind
  # configuration from the webserver will be used.
  port: 9000

# The webserver configuration. This handles both the frontend client and the metrics endpoint.
webserver:
  # If enabled, the webserver will serve the fronend app from the root of the domain. If set
  # to false
  serveClient: true

  # The host to bind to.
  bind: '0.0.0.0'

  # The port to listen on. If you're using Docker, make sure to change your port mapping
  port: 8080


# Configuration for the bot's logging
logging:
  # The directory to store log files to. They will be rotated automatically every day.
  directory: "logs"